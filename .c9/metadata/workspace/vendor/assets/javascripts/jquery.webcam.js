{"filter":false,"title":"jquery.webcam.js","tooltip":"/vendor/assets/javascripts/jquery.webcam.js","ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":8,"column":14},"end":{"row":8,"column":14},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"5c9e6a41c8c28c521f55876fcd6038fed096bcca","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":32,"column":4},"action":"remove","lines":["(function(factory) {","    if (typeof define === 'function' && define.amd) {","        define(['jquery', 'hammerjs'], factory);","    } else if (typeof exports === 'object') {","        factory(require('jquery'), require('hammerjs'));","    } else {","        factory(jQuery, Hammer);","    }","}(function($, Hammer) {","    function hammerify(el, options) {","        var $el = $(el);","        if(!$el.data(\"hammer\")) {","            $el.data(\"hammer\", new Hammer($el[0], options));","        }","    }","","    $.fn.hammer = function(options) {","        return this.each(function() {","            hammerify(this, options);","        });","    };","","    // extend the emit method to also trigger jQuery events","    Hammer.Manager.prototype.emit = (function(originalEmit) {","        return function(type, data) {","            originalEmit.call(this, type, data);","            $(this.element).trigger({","                type: type,","                gesture: data","            });","        };","    })(Hammer.Manager.prototype.emit);","}));"],"id":2},{"start":{"row":0,"column":0},"end":{"row":91,"column":11},"action":"insert","lines":["","(function ($) {","","    var webcam = {","","\t\"extern\": null, // external select token to support jQuery dialogs","\t\"append\": true, // append object instead of overwriting","","\t\"width\": 320,","\t\"height\": 240,","","\t\"mode\": \"callback\", // callback | save | stream","","\t\"swffile\": \"jscam.swf\",","\t\"quality\": 85,","","\t\"debug\":\tfunction () {},","\t\"onCapture\":\tfunction () {},","\t\"onTick\":\tfunction () {},","\t\"onSave\":\tfunction () {},","\t\"onLoad\":\tfunction () {}","    };","","    window[\"webcam\"] = webcam;","","    $[\"fn\"][\"webcam\"] = function(options) {","","\tif (typeof options === \"object\") {","\t    for (var ndx in webcam) {","\t\tif (options[ndx] !== undefined) {","\t\t    webcam[ndx] = options[ndx];","\t\t}","\t    }","\t}","","\tvar source = '<object id=\"XwebcamXobjectX\" type=\"application/x-shockwave-flash\" data=\"'+webcam[\"swffile\"]+'\" width=\"'+webcam[\"width\"]+'\" height=\"'+webcam[\"height\"]+'\"><param name=\"movie\" value=\"'+webcam[\"swffile\"]+'\" /><param name=\"FlashVars\" value=\"mode='+webcam[\"mode\"]+'&amp;quality='+webcam[\"quality\"]+'\" /><param name=\"allowScriptAccess\" value=\"always\" /></object>';","","\tif (null !== webcam[\"extern\"]) {","\t    $(webcam[\"extern\"])[webcam[\"append\"] ? \"append\" : \"html\"](source);","\t} else {","\t    this[webcam[\"append\"] ? \"append\" : \"html\"](source);","\t}","","\tvar run = 3;","\t(_register = function() {","\t    var cam = document.getElementById('XwebcamXobjectX');","","\t    if (cam && cam[\"capture\"] !== undefined) {","","\t\t/* Simple callback methods are not allowed :-/ */","\t\twebcam[\"capture\"] = function(x) {","\t\t    try {","\t\t\treturn cam[\"capture\"](x);","\t\t    } catch(e) {}","\t\t}","\t\twebcam[\"save\"] = function(x) {","\t\t    try {","\t\t\treturn cam[\"save\"](x);","\t\t    } catch(e) {}","\t\t}","\t\twebcam[\"setCamera\"] = function(x) {","\t\t    try {","\t\t\treturn cam[\"setCamera\"](x);","\t\t    } catch(e) {}","\t\t}","\t\twebcam[\"getCameraList\"] = function() {","\t\t    try {","\t\t\treturn cam[\"getCameraList\"]();","\t\t    } catch(e) {}","\t\t}","\t\twebcam[\"pauseCamera\"] = function() {","\t\t    try {","\t\t\treturn cam[\"pauseCamera\"]();","\t\t    } catch(e) {}","\t\t}\t\t","\t\twebcam[\"resumeCamera\"] = function() {","\t\t    try {","\t\t\treturn cam[\"resumeCamera\"]();","\t\t    } catch(e) {}","\t\t}","\t\twebcam[\"onLoad\"]();","\t    } else if (0 == run) {","\t\twebcam[\"debug\"](\"error\", \"Flash movie not yet registered!\");","\t    } else {","\t\t/* Flash interface not ready yet */","\t\trun--;","\t\twindow.setTimeout(_register, 1000 * (4 - run));","\t    }","\t})();","    }","","})(jQuery);"]}]]},"timestamp":1499689902711}