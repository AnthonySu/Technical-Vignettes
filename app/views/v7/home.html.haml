:coffeescript
    $ ->
        Utility.paperSetup "paperCanvas" 
        c = new paper.Path.Circle
            strokeColor: "black"
            radius: 200
            center:[600, 300]
        center = new paper.Point(600, 300)
        vector = new paper.Point(0, -250)
        step = 0
        while step <= 3
            dest = center.add(vector.rotate(90 * step))
            p = new paper.Path.Line(center, dest)
            p.strokeColor = "black"
            step = step + 1
        vector = new Point(0, -50)
        step = 0
        while step <= 90
            if (step % 10 == 0)
                origin = center.add(vector.rotate(step).normalize(200))
                dest = center.add(vector.rotate(step).normalize(250))
                p = new Path.Line(origin, dest);
                p.strokeColor = "black";
                
                
                text = new PointText(new Point(center.add(vector.rotate(step).normalize(250))));
                text.fillColor = 'black';
                text.content = step + '°'
            else if (step % 5 == 0)
                p = new Path.Line(center.add(vector.rotate(step).normalize(200)), center.add(vector.rotate(step).normalize(225)));
                p.strokeColor = "black"
            else
                p = new Path.Line(center.add(vector.rotate(step).normalize(220)), center.add(vector.rotate(step).normalize(225)));
                p.strokeColor = "black"
            step = step + 1
        vector = new Point(0, 50)
        step = 0
        while step <= 90
            if (step % 10 == 0)
                origin = center.add(vector.rotate(step).normalize(200))
                dest = center.add(vector.rotate(step).normalize(250))
                p = new Path.Line(origin, dest);
                p.strokeColor = "black";
                text = new PointText(new Point(center.add(vector.rotate(step).normalize(270))));
                text.fillColor = 'black';
                text.content = step + '°'
            else if (step % 5 == 0)
                p = new Path.Line(center.add(vector.rotate(step).normalize(200)), center.add(vector.rotate(step).normalize(225)));
                p.strokeColor = "black"
            step = step + 1
%canvas#paperCanvas

// IGNORE, BUT KEEP THIS LINE (Back button)   
= render :partial => "application/back_to_root"
    
:scss
    #paperCanvas{
        width: 100%;
        height: 100%;
        background: #f5f4f0;
        cursor: pointer;
    }
       